## คำถามท้ายการทดลอง

1. เพราะเหตุใด Binary Search Tree จึงมีประสิทธิภาพในการค้นหาข้อมูลมากกว่า Linear Search?
2. ในกรณีใดบ้างที่ BST จะมีประสิทธิภาพในการค้นหาเทียบเท่ากับ Linear Search?
3. จงอธิบายความแตกต่างระหว่าง Binary Tree และ Binary Search Tree
4. การ Traversal แบบใดที่จะแสดงผลข้อมูลเรียงลำดับจากน้อยไปมากเมื่อใช้กับ BST?

## ตอบ

1.Binary Search Tree: ใช้หลักการแบ่งครึ่งข้อมูล ทำให้สามารถตัดตัวเลือกได้ครึ่งหนึ่งในแต่ละขั้นตอน จึงค้นหาข้อมูลได้เร็วกว่ามาก โดยเฉพาะเมื่อข้อมูลมีจำนวนมากโดยไม่ต้องหาข้อมูลทีละตัว
  เหมือนกับ Linear Search: ค้นหาข้อมูลทีละตัวเรียงลำดับ จนกว่าจะเจอหรือถึงข้อมูลตัวสุดท้าย

2.เมื่อข้อมูลมีจำนวนน้อยมาก เพราะว่า ความแตกต่างของเวลาในการค้นหาระหว่าง BST และ Linear Search อาจไม่เห็นได้ชัดเจนเนื่องจากมีจำนวนข้อมูลที่น้อย 
  หลักการแบ่งครึ่งของ Binary Search Tree อาจจะไม่ได้มีประสิทธิภาพขนาดนั้น

3.Binary Tree: เป็นโครงสร้างข้อมูลที่ประกอบด้วยโหนดราก โหนดย่อยซ้าย และโหนดย่อยขวา แต่ละโหนดสามารถมีลูกได้สูงสุด 2 โหนด ไม่จำเป็นต้องมีการเรียงลำดับของข้อมูล
  Binary Search Tree: เป็นชนิดหนึ่งของ Binary Tree ที่มีเงื่อนไขเพิ่มเติมคือ ข้อมูลในโหนดย่อยซ้ายจะต้องน้อยกว่าข้อมูลในโหนดราก และข้อมูลในโหนดย่อยขวาจะต้องมากกว่าข้อมูลในโหนดราก ทำให้สามารถใช้หลักการ Binary Search ในการค้นหาข้อมูลได้

4.Inorder Traversal: เป็นการ Traversal ที่จะแสดงผลข้อมูลเรียงลำดับจากน้อยไปมากใน BST โดยมีขั้นตอนดังนี้
  - Traverse subtree ซ้าย
  - Visit root node
  - Traverse subtree ขวา