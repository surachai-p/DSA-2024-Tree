1. ทำไม Binary Search Tree จึงมีประสิทธิภาพในการค้นหาข้อมูลมากกว่า Linear Search?
ตอบ
    Binary Search Tree มีประสิทธิภาพสูงกว่าการค้นหาแบบ Linear Search เพราะลดจำนวนการเปรียบเทียบที่ต้องทำได้รวดเร็วกว่า โดยใช้โครงสร้างต้นไม้ที่ช่วยแบ่งข้อมูลออกเป็นส่วน ๆ เพื่อลดขอบเขตของการค้นหา

2.ในสถานการณ์ใดบ้างที่ BST จะมีประสิทธิภาพในการค้นหาเทียบเท่ากับ Linear Search?
ตอบ
    BST จะมีประสิทธิภาพเท่ากับ Linear Search (O(n)) ในสถานการณ์ต่อไปนี้:
    -BST ไม่สมดุล (Skewed Tree)  เช่น มีการแทรกข้อมูลแบบเรียงลำดับ (1 → 2 → 3 → 4...) ทำให้โครงสร้างต้นไม้เป็นเส้นตรงเหมือนลิงก์ลิสต์
    -ข้อมูลมีขนาดเล็ก หากมีข้อมูลน้อยมาก เช่น 2-3 โหนด ความแตกต่างของ BST และ Linear Search แทบไม่มีผล
    -ค้นหาใน Unbalanced BST หาก BST มีโหนดกระจุกตัวด้านใดด้านหนึ่งมากเกินไป เช่น ต้นไม้ที่เกิดจากการแทรกข้อมูลแบบไม่กระจาย

3. อะไรคือความแตกต่างระหว่าง Binary Tree และ Binary Search Tree?
ตอบ
    BST เป็น Binary Tree ที่มีการเรียงลำดับ ทำให้การค้นหาข้อมูลรวดเร็วขึ้น

4. การ Traversal แบบใดที่จะแสดงผลข้อมูลเรียงลำดับจากน้อยไปมากเมื่อใช้กับ BST?
ตอบ
    Inorder Traversal (Left → Root → Right) คือวิธีที่ใช้แสดงผลข้อมูลใน BST เรียงจากน้อยไปมาก
    กระบวนการทำงาน:
    -ไปทางซ้ายสุดก่อน (ค่าต่ำสุด)
    -แสดงค่าของโหนดปัจจุบัน
    -ไปทางขวา (ค่ามากขึ้น)

